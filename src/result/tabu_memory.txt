Answer
Path: [4, 0, 1, 3, 5, 2] , Cost: 12
Filename: tabu_search.py

Line #    Mem usage    Increment   Line Contents
================================================
     8   26.504 MiB    0.000 MiB   @profile
     9                             def tabu_search(graph, tabu_max=10, step=1000):
    10                             
    11   26.504 MiB    0.000 MiB       tabu_list = []
    12   26.504 MiB    0.000 MiB       n = len(graph)
    13   26.629 MiB    0.125 MiB       s = np.random.permutation(n).tolist()  # initil solution
    14   26.629 MiB    0.000 MiB       tabu_list.append(s)
    15                             
    16   27.109 MiB    0.480 MiB       for i in range(step):
    17                             
    18   27.109 MiB    0.000 MiB           feisible_list = []
    19   27.109 MiB    0.000 MiB           neighbors = get_neighbors(s)
    20                             
    21   27.109 MiB    0.000 MiB           for x in neighbors:
    22   27.109 MiB    0.000 MiB               if not x in tabu_list:
    23   27.109 MiB    0.000 MiB                   feisible_list.append(x)
    24                             
    25   27.109 MiB    0.000 MiB           s = find_better_solusion(feisible_list, s, graph)
    26                             
    27   27.109 MiB    0.000 MiB           if not s in tabu_list:
    28   26.676 MiB   -0.434 MiB               tabu_list.append(s)
    29                             
    30   27.109 MiB    0.434 MiB           if len(tabu_list) > tabu_max:
    31                                         tabu_list.pop(0)
    32                             
    33   19.797 MiB   -7.312 MiB       return s


